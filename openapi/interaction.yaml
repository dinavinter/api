openapi: 3.1.0
info:
  title: Interaction Api
  description: Api specification for manges customer interactions.
  version: '1.0'
servers:
  - url: https://{gigya-domain}
    variables:
      gigya-domain:
        default: accounts.gigya.com
        enum:
          - accounts.gigya.com
          - accounts.eu1.gigya.com
          - accounts.au1.gigya.com
        description: giya domains
components:
  schemas:
    Link:
      title: Hypermedia Link Relationship
      description: The target URL indicated in the `href` property is related to
        the current\nresource according to the defined semantics of the link relationship
        name.
      oneOf:
        - type: object
          title: Single Link
          properties:
            href:
              description: The hypertext reference to a related resource.
              type: string
              format: uri
            title:
              description: A descriptive title for the link.
              type: string
            type:
              description: A media type hint for the resource identified by the href.
              type: string
              default: application/json
            templated:
              description: Whether the given href is a templated URL using [RFC\n6570](https://tools.ietf.org/html/rfc6570) format.
              default: false
        - type: array
          title: Array of Links
          items:
            $ref: '#/components/schemas/Link/oneOf/0'

    interacton.form:
      properties:
        class:
          type: string
          example: "state"
        state:
          type: object
          properties:
            value: 
              type: string
              example: 
                - draft
                - binded
                - completed
            events:
              type: object
              properties:
                class:
                  type: string
                  example: 'form'
                name: 
                  type: string
                  example: 'submit'
                method:
                  type: string
                  example: "POST"
                href: 
                  type: string
                  example: "/interactions/Sigh-Up/v1/submit"
                fields: 
                  $ref: '#/components/schemas/template.schema'

        meta:
          type: object
          properties:
            appName:
              type: string
              example: "Sigh-Up"
            schema:
              type: string
              example: "/specs/interaction/components/schemas/SignUpSchema.yaml"
            title:
              type: string
              example: "Sigh Up To Our Junk"
              
        context:
          type: object
          properties:
           device-id:
             type: string
          additionalProperties: true


    fields.template.basic:
      properties:
        type:
          type: string
          enum:
            - string
            - boolean
            - integer
            - number
      x-tags:
        - field-template

    fields.template.string:
      allOf:
        - $ref: '#/components/schemas/fields.template.basic'
        - properties:
            type:
              type: string
              enum:
                - string

    fields.template.boolean:
      allOf:
        - $ref: '#/components/schemas/fields.template.basic'
        - properties:
            type:
              type: string
              enum:
                - boolean


    fields.template.object:
      title: Object Schema Template
      description: Describes schema's properties for a section.
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/fields.template.basic'
        required:
          type: array
          items:
            type: string
      maxProperties: 5

    fields.profile.firstName:
      type: object
      properties:
        profile.firstName:
          $ref: '#/components/schemas/fields.template.string'

    fields.profile.lastName:
      properties:
        profile.lastName:
          properties:
            type:
              enum:
                - string

    fields.profile.nickname:
      properties:
        profile.profile.:
          $ref: '#/components/schemas/fields.template.string'

    fields.sections.profile:
      title: Profile Fields
      description: Profile fields to collect during interaction.
      type: object
      properties:
        properties:
          anyOf:
            - $ref: '#/components/schemas/fields.profile.lastName'
            - $ref: '#/components/schemas/fields.profile.lastName'
            - additionalProperties:
                type: object
                pattern: '^(profile.*)'
                properties:
                  properties:
                    $ref: '#/components/schemas/fields.template.basic'
                example:
                  profile.zip:
                    type: string



    fields.sections.data:
      title: Custom data fields
      description: Custom data fields to collect during interaction.
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            pattern: '^(data.*)'
            properties:
              properties:
                $ref: '#/components/schemas/fields.template.basic'
          example:
            data.zip:
              type: string
            data.it-dep:
              type: boolean



    fields.sections.communication:
      title: Communication Fields
      description: Communication lists to signup during interaction.
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            pattern: '^(communication.*)'
            properties:
              properties:
                $ref: '#/components/schemas/fields.template.boolean'
            example:
              communication.newslatter:
                type: boolean

    fields.sections.consents:
      title: Consents Fields
      description: Consents to collect during interaction.
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: object
            pattern: '^(consents.*)'
            properties:
              properties:
                $ref: '#/components/schemas/fields.template.boolean'
            example:
              consents.tos:
                type: boolean


    fields.phone_number:
      type: object
      x-identifier: phonenumber
      properties:
        phonenumber:
          allOf:
            - $ref: '#/components/schemas/fields.template.string'
            - format: "email"

    fields.email:
      type: object
      x-identifier: email
      properties:
        email:
          $ref: '#/components/schemas/fields.template.string'





    identity.mobile:
      type: object
      title: mobile identity
      properties:
        properties:
          $ref: '#/components/schemas/fields.phone_number'
        type:
          type: string
          default: phonenumber
          readOnly: true
        provider:
          type: string
          enum:
            - otp
    identity.email:
      type: object
      title: email identity
      properties:
        properties:
          $ref: '#/components/schemas/fields.email'
        identifier-type:
          type: string
          default: email
          readOnly: true
        provider:
          type: string
          enum:
            - otp
            - lite
            - link
    channel.sms:
      title: if-channel.sms
      properties:
        selector:
          type: object
          properties:
            channel:
              type: string
              enum:
                - sms
    channel.email:
      title: if-channel.email
      properties:
        selector:
          type: object
          properties:
            channel:
              type: string
              enum:
                - email
    fields.sections.identity:
      type: array
      items:
        type: object
        oneOf:
          - anyOf:
              - title: if-channel-sms
                allOf:
                  - $ref: '#/components/schemas/identity.mobile'
                  - $ref: '#/components/schemas/channel.sms'
              - title: if-channel-email
                allOf:
                  - $ref: '#/components/schemas/identity.email'
                  - $ref: '#/components/schemas/channel.email'
          - $ref: '#/components/schemas/identity.mobile'
          - $ref: '#/components/schemas/identity.email'


    template.schema:
      description: A set of key-value pairs that describe the schema input of an intraction.
      type: object
      allOf:
        - $ref: '#/components/schemas/fields.template.object'
        - anyOf:
            - $ref: '#/components/schemas/fields.sections.profile'
            - $ref: '#/components/schemas/fields.sections.data'
            - $ref: '#/components/schemas/fields.sections.communication'
            - $ref: '#/components/schemas/fields.sections.consents'

        - properties:
            identity:
              $ref: '#/components/schemas/fields.sections.identity'


    template.outcomes:
      type: object
      readOnly: true
      description: >-
        A set of key-value pairs that describe the possible outcomes of the
        interactions.
      properties:
        authentication:
          type: object
          readOnly: true
          properties:
            output:
              readOnly: true
              type: object
              properties:
                type:
                  type: string
                  readOnly: true
                  default: auth
                identity:
                  type: string
                  readOnly: true
                  default: '#/properties/identity'
        authorized:
          type: object
          readOnly: true
          properties:
            output:
              type: object
              readOnly: true
              properties:
                type:
                  type: string
                  readOnly: true
                  default: projection
                identity:
                  type: string
                  readOnly: true
                  default: '#/properties/identity'
                profile:
                  type: string
                  readOnly: true
                  default: '#/properties/profile'
                communication:
                  type: string
                  readOnly: true
                  default: '#/properties/communication'
                consents:
                  type: string
                  readOnly: true
                  default: '#/properties/consents'

    interaction.template:
      type: object
      description:  >-
        An interaction machine object encapsulates a complete set of objects->
        that define an interaction 
        Triggers, Outcomes, Schema, and metadata.  
      properties:
        name:
          description: A human readable label for the intraction to be used in interfaces.
          type: string
          x-examples:
            - sigh-up
            - order-checkout
        class:
          description: >-
            Describes the nature of an intreaction content based on the current
            representation.
          type: array
          items:
            type: string
            x-examples:
              - screen-set
              - checkout-api
              - subscribtion-collection-form
              - lite-sign-up

        schema:
          $ref: '#/components/schemas/template.schema'

        outcomes:
          $ref: '#/components/schemas/template.outcomes'

        links:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Link'

    basic-error:
      type: object
      required:
        - message
        - code
        - requestId
      properties:
        message:
          type: string
        callId:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600


  examples:
    signup-interaction-email-lite:
      summary: Lite email identity.
      value:
        properties:
          name: signup
          class: screen-set
          schema:
            properties:
              property1:
                type: string
              data.property2:
                type: string
              profile.lastName:
                type: string
            identity:
              - properties:
                  email:
                    type: string
                    format: email
                  type: email
                  provider: lite
                  selector:
                    channel: email
          outcomes:
            authentication:
              output:
                type: auth
                identity: "#/properties/identity"
            authorized:
              output:
                type: projection
                identity: "#/properties/identity"

          links:
            - rel: self
              title: string
              type: application/json
              templated: true
              href: /templates/signup
            - rel: post
              title: string
              type: application/json
              templated: true
              href: /signup
    signup-interaction-mobile-otp:
      summary: Mobile otp identity
      value:
        properties:
          name: signup
          class: screen-set
          schema:
            properties:
              property1:
                type: string
              data.property2:
                type: string
              profile.lastName:
                type: string
            identity:
              - properties:
                  phonenumber:
                    type: string
                  type: phonenumber
                  provider: otp
                  selector:
                    channel: sms
          outcomes:
            authentication:
              output:
                type: auth
                identity: "#/properties/identity"
            authorized:
              output:
                type: projection
                identity: "#/properties/identity"
          links:
            - rel: self
              title: string
              type: application/json
              templated: true
              href: /templates/signup
            - rel: post
              title: string
              type: application/json
              templated: true
              href: /signup
    signup-interaction-selector:
      summary: Represents a signup to a newsletter flow entry point.
      value:
        properties:
          name: signup
          class: screen-set
          schema:
            properties:
              property1:
                type: string
              channel:
                type: string
              data.property2:
                type: string
              profile.lastName:
                type: string
            required:
              - channel
            identity-sms:
              - properties:
                  phonenumber:
                    type: string
                type: phonenumber
                provider: otp
                selector:
                  channel: sms
            identity-email:
              - properties:
                  email:
                    type: string
                    format: email
                  type: email
                  provider: lite
                  selector:
                    channel: email
          outcomes:
            authentication:
              output:
                type: authN
                identity: "#/properties/identity"
                callback: '/bind'
            authorized:
              output:
                type: projection
                identity: "#/properties/identity"
                profile: "#/properties/profile"
                communication: "#/properties/communication"
                consents: "#/properties/consents"
          links:
            - rel: self
              title: string
              type: application/json
              templated: true
              href: /templates/signup
            - rel: post
              title: string
              type: application/json
              templated: true
              href: /signup
  responses:
    errors.bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    errors.forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    errors.not_found:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    errors.service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/basic-error'
              - type: object
                properties:
                  code:
                    enum:
                      - 503

paths:
  /interactions:
    $ref: mng-interaction\paths\interactions@templates.yaml
  /interactions/{template}:
    $ref: mng-interaction\paths\interactions@templates@{template}.yaml    
   
  /interactions/{template}/instances:
    $ref: interaction\paths\interactions@{template}.yaml

tags:
  - name: interaction-template-model
    x-displayName: Template Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/template" />
      
  - name: interaction-schema-model
    x-displayName: Schema Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/schema" />

  - name: interaction-transitions-model
    x-displayName: Transitions Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/transitions" />

x-tagGroups:

  - name: Interaction Management
    tags:
      - Configuration
  - name: Interaction Runtime
    tags:
      - Runtime

  - name: Models
    tags:
      - interaction-template-model
      - interaction-schema-model
      - interaction-transitions-model
   